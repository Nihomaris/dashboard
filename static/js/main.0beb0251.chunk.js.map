{"version":3,"sources":["store/actionTypes.js","store/reducers.js","services/dashboard_api.js","store/list.js","components/comment.js","components/project.js","containers/dashboard.js","store/actions.js","App.js","serviceWorker.js","index.js"],"names":["GET_PROJECTS","ADD_COMMENT","MOVE_PROJECT","TOGGLE_COMMENT_WINDOW","INITIAL_STATE","apiProjects","sortProjects","commentWindow","PROJECT_WEBSITE","PROJECT_OTHER","dashboard","state","arguments","length","undefined","action","type","types","Object","objectSpread","payload","synchronizeProjects","AddComment","_action$payload","dragIndex","hoverIndex","dragProject","update","$splice","project","newSortProjects","toConsumableArray","map","item","i","id","splice","newApiProjects","push","API_HOST","add_comment","PROJECTS","title","comment","result","last_check","Comment","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateInputVal","bind","assertThisInitialized","sendComment","e","setState","target","value","_this$props","addComment","closeFn","_this$props2","react_default","a","createElement","className","onChange","style","marginLeft","onClick","Component","ItemTypes","cardTarget","hover","monitor","component","getItem","index","hoverBoundingRect","findDOMNode","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","moveCard","Project","toggleCommentWindow","itemtype","_this$props3","opacity","text","isDragging","connectDragSource","connectDropTarget","height","getStatus","openCommentWindow","RenderCommentWindow","data","_props$data","components_comment","ProjectTarget","DropTarget","connect","dropTarget","DragSource","beginDrag","dragSource","Dashboard","projects","moveProject","movecard","components_project","key","renderProject","color","textAlign","dispatch","fetch","dashboardApi","method","headers","content-type","body","JSON","stringify","then","res","json","catch","err","console","error","Actions","DashBoardApp","self","getProjects","setTimeout","containers_dashboard","src_App","oldProjects","count","log","DragDropContext","HTML5Backend","Boolean","window","location","hostname","match","store","createStore","combineReducers","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0beb0251.chunk.js","sourcesContent":["export const GET_PROJECTS = 'GET_PROJECTS';\r\nexport const ADD_PROJECT = 'ADD_PROJECT';\r\nexport const REMOVE_PROJECT = 'REMOVE_PROJECT';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const MOVE_PROJECT = 'MOVE_PROJECT';\r\nexport const TOGGLE_COMMENT_WINDOW = 'TOGGLE_COMMENT_WINDOW';","import * as types from './actionTypes';\r\nimport update from 'immutability-helper';\r\n\r\nconst INITIAL_STATE = {\r\n\tapiProjects: null,\r\n\tsortProjects: null,\r\n\tcommentWindow: null\r\n}\r\n\r\nexport const PROJECT_WEBSITE = 'website';\r\nexport const PROJECT_OTHER = 'other';\r\n\r\nexport function dashboard(state = INITIAL_STATE, action = {}) {\r\n\tswitch(action.type) {\r\n\t\tcase types.GET_PROJECTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tapiProjects: action.payload,\r\n\t\t\t\tsortProjects: state.sortProjects ? synchronizeProjects(state, action.payload) : action.payload\r\n\t\t\t}\r\n\t\tcase types.ADD_COMMENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsortProjects: AddComment(state, action.payload)\r\n\t\t\t}\r\n\t\tcase types.MOVE_PROJECT:\r\n\t\t\tconst { dragIndex, hoverIndex, dragProject } = action.payload;\r\n\t\t\t\r\n\t\t\treturn update(state, {\r\n\t\t\t\t\tsortProjects: {\r\n\t\t\t\t\t  $splice: [[dragIndex, 1], [hoverIndex, 0, dragProject]],\r\n\t\t\t\t\t}\r\n\t\t\t  })\r\n\t\tcase types.TOGGLE_COMMENT_WINDOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcommentWindow: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t\t\t\r\n\t}\r\n}\r\n\r\nfunction AddComment(state, project) {\r\n\tconst { sortProjects } = state;\r\n\r\n\tlet newSortProjects = [...sortProjects];\r\n\r\n\tsortProjects.map((item, i) => {\r\n\t\tif(item.id === project.id) {\r\n\t\t\tnewSortProjects.splice(i, 1, project)\r\n\t\t}\r\n\t})\r\n\r\n\treturn newSortProjects;\r\n}\r\n\r\nfunction synchronizeProjects(state, apiProjects) {\r\n\tconst { sortProjects } = state;\r\n\r\n\tvar newApiProjects = [...apiProjects]\r\n\tvar newSortProjects = [];\r\n\r\n\tsortProjects.map((project) => {\r\n\t\tnewApiProjects.map((item, i) => { \r\n\t\t\tif(item.id === project.id) {\r\n\t\t\t\tnewSortProjects.push(newApiProjects.splice(i, 1)[0]);\r\n\t\t\t} \r\n\t\t\treturn false;\r\n\t\t})\r\n\t\treturn false;\r\n\t})\r\n\r\n\tif(newApiProjects.length) {\r\n\t\tnewApiProjects.map((item) => newSortProjects.push(item))\r\n\t}\r\n\t\r\n\treturn newSortProjects;\r\n}","\r\nconst API_HOST = 'https://novaweb.studio/';\r\n\r\nexport const get_projects = {\r\n\turl: API_HOST + 'dashboard/_api/projects/?format=json',\r\n\tmethod: 'GET'\r\n}\r\n\r\nexport const add_project = {\r\n\turl: API_HOST + 'dashboard/_api/projects/',\r\n\tmethod: 'POST'\r\n}\r\n\r\nexport const remove_project = {\r\n\turl: API_HOST + 'dashboard/_api/projects/',\r\n\tmethod: 'DELETE'\r\n}\r\n\r\nexport const add_comment = {\r\n\turl: API_HOST + 'dashboard/_api/projects/',\r\n\tmethod: 'PATCH'\r\n}","export const PROJECTS = [\r\n    {\r\n        \"id\": 3,\r\n        \"title\": \"test\",\r\n        \"type\": \"other\",\r\n        \"comment\": \"4\",\r\n        \"result\": false,\r\n        \"last_check\": \"2019-01-18T18:56:26.380867+03:00\"\r\n    },\r\n    {\r\n        \"id\": 0,\r\n        \"title\": \"Google\",\r\n        \"type\": \"website\",\r\n        \"comment\": \"1\",\r\n        \"result\": true,\r\n        \"last_check\": \"2019-01-18T18:56:26.519109+03:00\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"title\": \"GitHub\",\r\n        \"type\": \"other\",\r\n        \"comment\": \"3\",\r\n        \"result\": true,\r\n        \"last_check\": \"2019-01-18T18:56:26.922697+03:00\"\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"title\": \"YouTube\",\r\n        \"type\": \"website\",\r\n        \"comment\": \"2\",\r\n        \"result\": true,\r\n        \"last_check\": \"2019-01-18T18:36:20.461361+03:00\"\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"title\": \"test\",\r\n        \"type\": \"website\",\r\n        \"comment\": \"5\",\r\n        \"result\": \"AssertionError('Status code 504',)\",\r\n        \"last_check\": \"2019-01-18T18:50:26.155261+03:00\"\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"title\": \"test\",\r\n        \"type\": \"website\",\r\n        \"comment\": \"123\",\r\n        \"result\": \"AssertionError('Status code 504',)\",\r\n        \"last_check\": \"2019-01-18T18:51:26.178532+03:00\"\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"title\": \"VKontakte\",\r\n        \"type\": \"website\",\r\n        \"comment\": \"Maybe yes ?\",\r\n        \"result\": \"AssertionError('Status code 504',)\",\r\n        \"last_check\": \"2019-01-18T18:52:26.198924+03:00\"\r\n    },\r\n    {\r\n        \"id\": 7,\r\n        \"title\": \"Bad news for you\",\r\n        \"type\": \"other\",\r\n        \"comment\": \"No\",\r\n        \"result\": false,\r\n        \"last_check\": \"2019-01-18T18:53:26.222046+03:00\"\r\n    },\r\n    {\r\n        \"id\": 9,\r\n        \"title\": \"Bad news for you\",\r\n        \"type\": \"other\",\r\n        \"comment\": \"No\",\r\n        \"result\": false,\r\n        \"last_check\": \"2019-01-18T18:54:26.268325+03:00\"\r\n    },\r\n    {\r\n        \"id\": 8,\r\n        \"title\": \"Bad news for you\",\r\n        \"type\": \"other\",\r\n        \"comment\": \"No\",\r\n        \"result\": false,\r\n        \"last_check\": \"2019-01-18T18:55:26.331538+03:00\"\r\n    }\r\n]","import React, { Component } from 'react';\r\n\r\n\r\nclass Comment extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { comment: '' };\r\n\t\tthis.updateInputVal = this.updateInputVal.bind(this)\r\n\t\tthis.sendComment = this.sendComment.bind(this)\r\n\t}\r\n\r\n\tupdateInputVal(e) {\r\n\t\tthis.setState({\r\n\t\t\tcomment: e.target.value\r\n\t\t})\r\n\t}\r\n\t\r\n\tsendComment() {\r\n\t\tconst { project, addComment, closeFn } = this.props;\r\n\t\tif( !this.state.comment ) { return; }\r\n\t\t// console.log({id: project.id, comment: {'comment': this.state.comment}})\r\n\t\taddComment({id: project.id, comment: {'comment': this.state.comment}})\r\n\t\tcloseFn(null)\r\n\t}\r\n\r\n\trender() {\r\n\t\t  const { project, closeFn } = this.props;\r\n\t\t  return (          \r\n\t\t    <div className=\"project_comment_container\">\r\n\t\t      <div className=\"container\">\r\n\t\t        <div className=\"row\">\r\n\t\t          <div className=\"col-12\">\r\n\t\t            <div className=\"alert alert-success project_comment\">\r\n\t\t              <span>{ project.comment }</span>\r\n\t\t            </div>\r\n\t\t          </div>\r\n\t\t        </div>\r\n\t\t      </div>\r\n\t\t      <div className=\"input-group\">\r\n\t\t      \t<input type=\"text\" onChange={this.updateInputVal} className=\"form-control\" />\r\n\t\t      </div>\r\n\t\t      <div className=\"input-group\">\r\n\t\t        <div className=\"input-group-append\" style={{'marginLeft': 'auto'}}>\r\n\t\t          <button onClick={this.sendComment}className=\"btn btn-outline-secondary\" type=\"button\">Send</button>\r\n\t\t          <button onClick={closeFn} className=\"btn btn-outline-secondary\" type=\"button\">Close</button>\r\n\t\t        </div>\r\n\t\t      </div>\r\n\t\t      \r\n\t\t    </div>\r\n\t\t  )\r\n\t}     \r\n\r\n}\r\n\r\nfunction parseComments() {\r\n\r\n}\r\nexport default Comment;","import React, { Component } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport { DragSource,DropTarget } from 'react-dnd';\r\n// import { XYCoord } from 'dnd-core';\r\n\r\nimport { PROJECT_WEBSITE, PROJECT_OTHER } from '../store/reducers';\r\nimport Comment from './comment';\r\n\r\nconst ItemTypes = {\r\n  type: 'project',\r\n}\r\n\r\nconst cardSource = {\r\n  beginDrag(props) {\r\n    props.toggleCommentWindow(null)\r\n    return {\r\n      id: props.id,\r\n      index: props.index,\r\n    }\r\n  }\r\n}\r\n\r\nconst cardTarget = {\r\n  hover(props, monitor, component) {\r\n    if (!component) {\r\n      return null;\r\n    }\r\n    const dragIndex = monitor.getItem().index\r\n    const hoverIndex = props.index\r\n\r\n    if (dragIndex === hoverIndex) {\r\n      return\r\n    }\r\n\r\n    const hoverBoundingRect = findDOMNode(component).getBoundingClientRect()\r\n\r\n    const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n\r\n    const clientOffset = monitor.getClientOffset()\r\n\r\n    const hoverClientY = clientOffset.y - hoverBoundingRect.top\r\n\r\n\r\n    if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n      return\r\n    }\r\n\r\n    if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n      return\r\n    }\r\n\r\n    props.moveCard(dragIndex, hoverIndex)\r\n\r\n    monitor.getItem().index = hoverIndex\r\n  },\r\n}\r\n\r\nfunction targetConnect(connect) {\r\n  return {\r\n    connectDropTarget: connect.dropTarget(),\r\n  }\r\n}\r\nfunction sourceConnect(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    isDragging: monitor.isDragging(),\r\n  }\r\n}\r\n\r\nclass Project extends Component {\r\n  \r\n  openCommentWindow() {\r\n    const { project, commentWindow, toggleCommentWindow } = this.props;\r\n    if(commentWindow && project.id === commentWindow.id) {\r\n      toggleCommentWindow(null);\r\n    } else {\r\n      toggleCommentWindow(project);\r\n    } \r\n  }\r\n\r\n  render() {\r\n      const { id, type, title, comment, result, project, itemtype, commentWindow } = this.props;\r\n      const { text, isDragging, connectDragSource, connectDropTarget, } = this.props;\r\n      const opacity = isDragging ? 0 : 1;\r\n      \r\n\r\n      return connectDragSource(connectDropTarget(\r\n        <section className=\"project\" style={{ opacity }}>       \r\n          \r\n            <div className=\"container project_info\">\r\n              <div className=\"row align-items-center\" style={{'height': '100%'}}>\r\n                <div className=\"col-4\">\r\n                  <span>{ type || 'неизвестно' }<br/><strong>{ title || 'неизвестно' }</strong></span>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                   <span>status:<br/><strong>{ getStatus(result, itemtype) }</strong></span>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <button onClick={this.openCommentWindow.bind(this)} className=\"btn btn-success\">write</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n             { commentWindow && commentWindow.id === project.id && <RenderCommentWindow data={this.props} /> }\r\n        \r\n        </section>\r\n      ))\r\n  }     \r\n\r\n}\r\n\r\n\r\nfunction RenderCommentWindow(props) {\r\n  const { project, toggleCommentWindow, addComment } = props.data;\r\n  return <Comment closeFn={toggleCommentWindow} project={project} addComment={addComment} />\r\n}\r\n\r\nfunction getStatus(result, itemtype) {\r\n  let status = '';\r\n\r\n  switch(itemtype) {\r\n    case PROJECT_WEBSITE:\r\n      if(typeof(result) === 'string') {\r\n        status = result;\r\n      } else {\r\n        status = '200';\r\n      }      \r\n      return status;\r\n    case PROJECT_OTHER:\r\n      result ? status = 'ON' : status = 'OFF';\r\n      return status;\r\n    default:\r\n      status = 'Неизвестно';\r\n      return status;\r\n  }\r\n\r\n}\r\n\r\nlet ProjectTarget = DropTarget( ItemTypes.type, cardTarget, targetConnect )(Project);\r\n    ProjectTarget = DragSource( ItemTypes.type, cardSource, sourceConnect )(ProjectTarget);\r\nexport default ProjectTarget;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as Actions from '../store/actions';\r\nimport Project from '../components/project';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  moveCard(dragIndex, hoverIndex) {\r\n\r\n    const { projects } = this.props;\r\n    const dragProject = projects[dragIndex]\r\n    \r\n    this.props.moveProject({dragIndex, hoverIndex, dragProject})\r\n  }\r\n\r\n  render() {\r\n      const { projects } = this.props;\r\n      const { itemtype, toggleCommentWindow, commentWindow, addComment } = this.props;\r\n\r\n      return (   \r\n        <section className=\"dashboard\">\r\n\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-sm col-md-4\">\r\n\r\n                <article className=\"dashboard__container\">\r\n                  <div className=\"container\">\r\n                    <div className=\"row align-items-center\">\r\n                      \r\n                      <div className=\"col-12\">\r\n\r\n                         {(projects && projects.map((project, i) => (renderProject(project, itemtype, toggleCommentWindow, commentWindow, addComment, this.moveCard.bind(this), i)))) || renderLoading() }\r\n                          \r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </article>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </section>\r\n      )\r\n  }     \r\n\r\n}\r\n\r\n\r\nfunction renderLoading() {\r\n  return (\r\n    <h3 style={{'color': 'black', 'textAlign': 'center'}}>\r\n    Loading\r\n    </h3>\r\n  )\r\n}\r\n\r\nfunction renderProject(project, itemtype, toggleCommentWindow, commentWindow, addComment, movecard, i) {\r\n  if(project.type === itemtype) {\r\n    return ( \r\n      <Project\r\n        itemtype={itemtype}\r\n        project={project}\r\n        key={project.id}\r\n        index={i}\r\n        id={project.id}\r\n        type={project.type}\r\n        title={project.title}\r\n        comment={project.comment}\r\n        result={project.result}\r\n        moveCard={movecard}\r\n        toggleCommentWindow={toggleCommentWindow}\r\n        commentWindow={commentWindow}\r\n        addComment={addComment}\r\n      />\r\n    )\r\n  } \r\n}\r\n\r\n\r\nexport default connect(\r\n  state => ({\r\n    projects: state.dashboard.sortProjects,\r\n    commentWindow: state.dashboard.commentWindow\r\n  }),\r\n  dispatch => ({\r\n    addComment: (data) => {\r\n      dispatch(Actions.addComment(data))\r\n    },\r\n    moveProject: (data) => {\r\n      dispatch(Actions.moveProject(data))\r\n    },\r\n    toggleCommentWindow: (data) => {\r\n      dispatch(Actions.toggleCommentWindow(data))\r\n    }\r\n  })\r\n)(Dashboard);","import * as types from './actionTypes';\r\nimport * as dashboardApi from '../services/dashboard_api';\r\n\r\nimport { PROJECTS } from './list';\r\n\r\nexport const getProjects = () => {\r\n\t/*return dispatch => {\r\n\t\tfetch(dashboardApi.get_projects.url, {\r\n\t      method: dashboardApi.get_projects.method,\r\n\t      headers: {\r\n\t        'content-type': 'application/json'\r\n\t      }\r\n    \t})\r\n\t\t.then((res) => { return res.json() })\r\n\t\t.then((data) => { dispatch({type: types.GET_PROJECTS, payload: data})\t})\r\n\t\t.catch((err) => { console.error('Не удалось получить список проектов') })\r\n\t}*/\r\n\t\r\n\treturn dispatch => {\r\n\t\tconst oldProjects = [...PROJECTS];\r\n\t\tvar count = oldProjects.length;\r\n\t\tPROJECTS.push({\r\n\t        \"id\": count++,\r\n\t        \"title\": \"She\",\r\n\t        \"type\": \"website\",\r\n\t        \"comment\": \"5\",\r\n\t        \"result\": \"AssertionError('Status code 5004',)\",\r\n\t        \"last_check\": \"2019-01-18T18:50:26.155261+03:00\"\r\n\t    })\r\n\t    console.log(count)\r\n\t\tdispatch({type: types.GET_PROJECTS, payload: oldProjects})\r\n\t}\r\n}\r\n\r\nexport const addComment = (data) => {\r\n\treturn dispatch => {\r\n\t\tfetch(dashboardApi.add_comment.url + data.id, {\r\n\t      method: dashboardApi.add_comment.method,\r\n\t      headers: {\r\n\t        'content-type': 'application/json'\r\n\t      },\r\n\t      body: JSON.stringify(data.comment)\r\n    \t})\r\n\t\t.then((res) => { return res.json() })\r\n\t\t.then((data) => { dispatch({type: types.ADD_COMMENT, payload: data}) })\r\n\t\t.catch((err) => { console.error('Не удалось отправить комментарий') })\r\n\t}\r\n}\r\n\r\nexport const moveProject = (data) => {\r\n\treturn dispatch => {\r\n\t\tdispatch({type: types.MOVE_PROJECT, payload: data})\r\n\t}\r\n}\r\n\r\nexport const toggleCommentWindow = (data) => {\r\n\treturn dispatch => {\r\n\t\tdispatch({type: types.TOGGLE_COMMENT_WINDOW, payload: data})\r\n\t}\r\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DragDropContext } from 'react-dnd';\nimport './App.css';\nimport * as Actions from './store/actions';\nimport { PROJECT_WEBSITE, PROJECT_OTHER } from './store/reducers';\n\nimport Dashboard from './containers/dashboard';\n\nclass DashBoardApp extends Component {\n\n  componentDidMount() {\n    const self = this;\n    this.props.getProjects();\n    setTimeout(function() {\n      self.props.getProjects();\n    }, 5000)\n  }\n\n  render() {\n    return (\n      <div>\n        <Dashboard itemtype={PROJECT_WEBSITE} />\n        <Dashboard itemtype={PROJECT_OTHER} />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({}),\n  dispatch => ({\n    getProjects: () => {\n      dispatch(Actions.getProjects())\n    }\n  }))(DragDropContext(HTML5Backend)(DashBoardApp));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport './index.css';\nimport * as reducers from './store/reducers.js';\nimport DashBoardApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(combineReducers(reducers), composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}><DashBoardApp /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}